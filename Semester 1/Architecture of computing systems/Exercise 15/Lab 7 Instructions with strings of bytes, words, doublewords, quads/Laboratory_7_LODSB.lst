     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 07563412153C2B1A            s dd 12345607h, 1A2B3C15h
    14                                      len_s equ $-s
    15 00000000 <rept>                      d times len_s db
    15          ******************       warning: no operand for data declaration
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21                                          
    22 00000000 B902000000                      mov ecx, len_s/4
    23 00000005 BE[00000000]                    mov esi, s
    24 0000000A BF[08000000]                    mov edi, d
    25                                          put_the_string_into_d:
    26 0000000F A5                                  movsd
    27 00000010 E2FD                            loop put_the_string_into_d
    28                                          ; exit(0)
    29 00000012 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    30 00000014 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
